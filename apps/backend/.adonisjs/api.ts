// @ts-nocheck
/* eslint-disable */
// --------------------------------------------------
// This file is auto-generated by Tuyau. Do not edit manually !
// --------------------------------------------------

import type { MakeTuyauRequest, MakeNonSerializedTuyauResponse } from '@tuyau/utils/types'
import type { InferInput } from '@vinejs/vine/types'

type AuthMeGetHead = {
  request: unknown
  response: MakeNonSerializedTuyauResponse<import('../app/controllers/auth/me_controller.ts').default['handle'], false>
}
type AuthLoginPost = {
  request: unknown
  response: MakeNonSerializedTuyauResponse<import('../app/controllers/auth/login_controller.ts').default['handle'], false>
}
type AuthRegisterPost = {
  request: MakeTuyauRequest<InferInput<typeof import('../app/controllers/auth/register_controller.ts')['validator']>>
  response: MakeNonSerializedTuyauResponse<import('../app/controllers/auth/register_controller.ts').default['handle'], true>
}
type AuthForgotpasswordPost = {
  request: MakeTuyauRequest<InferInput<typeof import('../app/controllers/auth/forgot_password_controller.ts')['validator']>>
  response: MakeNonSerializedTuyauResponse<import('../app/controllers/auth/forgot_password_controller.ts').default['handle'], true>
}
type AuthResetpasswordPost = {
  request: MakeTuyauRequest<InferInput<typeof import('../app/controllers/auth/reset_password_controller.ts')['validator']>>
  response: MakeNonSerializedTuyauResponse<import('../app/controllers/auth/reset_password_controller.ts').default['handle'], true>
}
type AuthLogoutDelete = {
  request: unknown
  response: MakeNonSerializedTuyauResponse<import('../app/controllers/auth/logout_controller.ts').default['handle'], false>
}
export interface ApiDefinition {
  'auth': {
    'me': {
      '$url': {
      };
      '$get': AuthMeGetHead;
      '$head': AuthMeGetHead;
    };
    'login': {
      '$url': {
      };
      '$post': AuthLoginPost;
    };
    'register': {
      '$url': {
      };
      '$post': AuthRegisterPost;
    };
    'forgot-password': {
      '$url': {
      };
      '$post': AuthForgotpasswordPost;
    };
    'reset-password': {
      '$url': {
      };
      '$post': AuthResetpasswordPost;
    };
    'logout': {
      '$url': {
      };
      '$delete': AuthLogoutDelete;
    };
  };
}
const routes = [
] as const;
export const api = {
  routes,
  definition: {} as ApiDefinition
}
